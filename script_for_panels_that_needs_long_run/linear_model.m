clear; clc; close all;

dataFilesDirList = {'M1\102721', 'M2\102821','M3\102921',...
    'M5\120221'};
mouseNameList = {'M1_102721', 'M2_102821','M3_102921',...
    'M5_120221'};dataPathPrefix = 'E:\Ephys\Conc_Series';
% dataPathPrefix = 'D:\Reza\sniffOdorProject\Conc_Series';
% dataPathPrefix = 'D:\sniffOdorProject\Conc_Series';
%%
tBeginning = .4;
tEnd = 5;
trialsToRemove = 2;
add_ndt_paths_and_init_rand_generator
numberOfBalanceSampling = 100;
num_of_shuffle = 25;

%%
conc_set = [1,2,4];
baselineCond = 0;
for mn = 1 : length(mouseNameList)
    %%
    mn
    mouseName = mouseNameList{mn};
    mouseDirName = fullfile(dataPathPrefix,'processedDataStorage',...
        mouseName);
    load(fullfile(mouseDirName,...
        sprintf('\\%s_inh_NR.mat', mouseName)));
    %%
    [fSpaceCell, fSpaceLbelsCell, ~,unitsRegionIdCell] =...
        get_aSample(dataPathPrefix, {mouseName},....
                    conc_set, 1:2, tBeginning, tEnd,trialsToRemove,...
                    1, baselineCond, -1, .5);
    totalSpace = (fSpaceCell{1}); 
    fSpaceLbels = fSpaceLbelsCell{1};
    
    linearlity_model_coeff_shuffled =...
        nan(3, num_of_shuffle, size(totalSpace,2), ...
        max(fSpaceLbels.OdorId),...
        numberOfBalanceSampling);


    linearlity_model_coeff =...
        nan(3, size(totalSpace,2), max(fSpaceLbels.OdorId),...
        numberOfBalanceSampling);
    linearlity_model_pVal  =...
        nan(3, size(totalSpace,2), max(fSpaceLbels.OdorId),...
        numberOfBalanceSampling);


    nonlinearlity_model_coeff =...
        nan(1, size(totalSpace,2), max(fSpaceLbels.OdorId),...
        numberOfBalanceSampling);
    nonlinearlity_model_pVal =...
        nan(1, size(totalSpace,2), max(fSpaceLbels.OdorId),...
        numberOfBalanceSampling);
    parfor perm = 1 : numberOfBalanceSampling 
        %%
        [fSpaceCell, fSpaceLbelsCell] =...
            get_aSample(dataPathPrefix, {mouseName},....
                        conc_set, 1:2, tBeginning, tEnd,trialsToRemove,...
                        1, baselineCond, -1, .5);
        totalSpace = (fSpaceCell{1}); % you could  normolizing here
        fSpaceLbels = fSpaceLbelsCell{1};
        %%
        linearlity_model_coeff_singleOdorLevel_shuffle =...
            nan(3, num_of_shuffle, size(totalSpace,2), max(fSpaceLbels.OdorId));
        linearlity_model_coeff_singleOdorLevel =...
            nan(3, size(totalSpace,2), max(fSpaceLbels.OdorId));
        linearlity_model_pVal_singleOdorLevel  =...
            nan(3, size(totalSpace,2), max(fSpaceLbels.OdorId));
        nonlinearlity_model_coeff_singleOdorLevel =...
            nan(1, size(totalSpace,2), max(fSpaceLbels.OdorId));
        nonlinearlity_model_pVal_singleOdorLevel =...
            nan(1, size(totalSpace,2), max(fSpaceLbels.OdorId));
        for oId = 1 : 2
            %%
            designMatfull = zeros(length(fSpaceLbels.OdorId),2);
            designMatfull(fSpaceLbels.RespLabel== 1, 1) = 1;
            designMatfull(fSpaceLbels.ConcId == 1, 2) = .33;
            designMatfull(fSpaceLbels.ConcId == 2, 2) = .66;
            designMatfull(fSpaceLbels.ConcId == 4, 2) = 1;

            designMat_linearity =...
                designMatfull(fSpaceLbels.OdorId == oId |...
                fSpaceLbels.OdorId == 0, :);
            designMat_non_linearity =...
                designMat_linearity(:, 1).* designMat_linearity(:, 2);
            %%
            linearlity_model_coeff_singleCellLevel_shuffled = ...
                nan(3, num_of_shuffle, size(totalSpace,2));
            linearlity_model_coeff_singleCellLevel =...
                nan(3, size(totalSpace,2));
            linearlity_model_pVal_singleCellLevel  =...
                nan(3, size(totalSpace,2));
            nonlinearlity_model_coeff_singleCellLevel =...
                nan(1, size(totalSpace,2));
            nonlinearlity_model_pVal_singleCellLevel =...
                nan(1, size(totalSpace,2));
            %%
            for ni = 1 : size(totalSpace,2)
                respVec = totalSpace(fSpaceLbels.OdorId == oId |...
                                     fSpaceLbels.OdorId == 0,ni);
                respVec = zscore(respVec);
                %%
               mdl_linearity = fitlm(designMat_linearity,respVec);
               linearity_coeff = mdl_linearity.Coefficients.Estimate;
               linearity_coeff_pval = mdl_linearity.Coefficients.pValue;
               
               residualVec = respVec - ([ones(size(respVec, 1), 1),...
                   designMat_linearity] * linearity_coeff);
               mdl_nonlinearity =...
                   fitlm(designMat_non_linearity,residualVec,...
                   'Intercept',false);
               nonlinearity_coeff =...
                   mdl_nonlinearity.Coefficients.Estimate;
               nonlinearity_pval =...
                   mdl_nonlinearity.Coefficients.pValue;
               
               linearlity_model_coeff_singleCellLevel(:, ni) =...
                   linearity_coeff;
               linearlity_model_pVal_singleCellLevel(:, ni) =...
                   linearity_coeff_pval;
               
               nonlinearlity_model_coeff_singleCellLevel(:, ni) =...
                   nonlinearity_coeff;
               nonlinearlity_model_pVal_singleCellLevel(:, ni) =...
                   nonlinearity_pval;
               %%
               linearlity_model_coeff_permutation_level_shuffled=...
                   nan(3, num_of_shuffle);
               for shi = 1 : num_of_shuffle
                   respVec_shuffled = respVec(randperm(length(respVec)));
                   mdl_linearity_shuffled = fitlm(designMat_linearity,respVec_shuffled);
                   linearity_coeff_suffled = mdl_linearity_shuffled.Coefficients.Estimate;
                   linearlity_model_coeff_permutation_level_shuffled(:, shi) =...
                        linearity_coeff_suffled;
               end 
               linearlity_model_coeff_singleCellLevel_shuffled(:, :, ni)=...
                   linearlity_model_coeff_permutation_level_shuffled;
            end
            linearlity_model_coeff_singleOdorLevel_shuffle(:, :, :, oId) =...
                linearlity_model_coeff_singleCellLevel_shuffled;

            linearlity_model_coeff_singleOdorLevel(:, :, oId) =...
                linearlity_model_coeff_singleCellLevel;
            linearlity_model_pVal_singleOdorLevel(:, :, oId) =...
                linearlity_model_pVal_singleCellLevel;           

            nonlinearlity_model_coeff_singleOdorLevel(:, :, oId) =...
                nonlinearlity_model_coeff_singleCellLevel;            
            nonlinearlity_model_pVal_singleOdorLevel(:, :, oId) =...
                nonlinearlity_model_pVal_singleCellLevel;
        end
        linearlity_model_coeff_shuffled(:, :, :, :, perm) =...
            linearlity_model_coeff_singleOdorLevel_shuffle;

        linearlity_model_coeff(:, :, :, perm) =...
            linearlity_model_coeff_singleOdorLevel;
        linearlity_model_pVal(:, :, :, perm)  =...
            linearlity_model_pVal_singleOdorLevel;
        
        nonlinearlity_model_coeff(:, :, :, perm) =...
            nonlinearlity_model_coeff_singleOdorLevel;
        nonlinearlity_model_pVal(:, :, :, perm) =...
            nonlinearlity_model_pVal_singleOdorLevel;

    end
    %%
    lrModel.linearlity_model_coeff = linearlity_model_coeff;
    lrModel.linearlity_model_pVal = linearlity_model_pVal;
    lrModel.nonlinearlity_model_coeff = nonlinearlity_model_coeff;
    lrModel.nonlinearlity_model_pVal = nonlinearlity_model_pVal;
    lrModel.linearlity_model_coeff_shuffled = linearlity_model_coeff_shuffled;
    %%
    mouseDirName = fullfile(dataPathPrefix,'processedDataStorage',...
        mouseName);
    save(fullfile(mouseDirName,...
        sprintf('\\%s_lrModel_zscored_no_baseline_with_suffle.mat', mouseName)),...
        'lrModel', '-v7.3');
end