clear; clc; close all;
%%
dataFilesDirList = {'M1\102721', 'M2\102821','M3\102921',...
    'M5\120221'};
mouseNameList = {'M1_102721', 'M2_102821','M3_102921',...
    'M5_120221'};
dataPathPrefix = 'E:\Ephys\Conc_Series';
%dataPathPrefix = 'D:\Reza\sniffOdorProject\Conc_Series';
% dataPathPrefix = 'D:\sniffOdorProject\Conc_Series';
%%
linearity_Coeff_poold = [];
linearity_pVal_poold = [];
nonlinearity_Coeff_poold = [];
nonlinearity_pVal_poold = [];
linearity_shuffled_Coeff_poold = [];
%%
for mn = 1 : length(mouseNameList)
    %%
    mouseName = mouseNameList{mn};
    mouseDirName = fullfile(dataPathPrefix,'processedDataStorage',...
        mouseName);
%     load(fullfile(mouseDirName,...
%             sprintf('\\%s_lrModel_no_baseline.mat', mouseName)));
    load(fullfile(mouseDirName,...
             sprintf('\\%s_lrModel_no_baseline.mat', mouseName)));
    goodAndSafe_unitsFlag =...
            get_goodAndSafe_units(dataPathPrefix, mouseName,...
            6, .5);
   %%
   linearity_Coeff_poold =...
       [linearity_Coeff_poold,...
       nanmean(lrModel.linearlity_model_coeff(...
       :, goodAndSafe_unitsFlag,:, :), 4)];
   linearity_pVal_poold =...
       [linearity_pVal_poold,...
       nanmean(lrModel.linearlity_model_pVal(...
       :, goodAndSafe_unitsFlag,:, :), 4)];
   
%    linearity_shuffled_Coeff_concat = [];
%    for shi = 1 : size(lrModel.linearlity_model_coeff_shuffled, 2)
%        linearity_shuffled_Coeff_concat =...
%        cat(4, linearity_shuffled_Coeff_concat,....
%        squeeze(lrModel.linearlity_model_coeff_shuffled...
%        (:, shi, goodAndSafe_unitsFlag, :, :)));
%    end
%    linearity_shuffled_Coeff_poold =...
%        [linearity_shuffled_Coeff_poold,....
%        linearity_shuffled_Coeff_concat];
%    
   
   nonlinearity_Coeff_poold = ...
       [nonlinearity_Coeff_poold,...
       nanmean(lrModel.nonlinearlity_model_coeff(...
       :, goodAndSafe_unitsFlag,:, :), 4)];
   nonlinearity_pVal_poold =...
       [nonlinearity_pVal_poold,...
       nanmean(lrModel.nonlinearlity_model_pVal(...
       :, goodAndSafe_unitsFlag,:, :), 4)];
   
end
%%
pVal = .01;
constantFactor = squeeze(linearity_Coeff_poold(1,:, :));
sigGamma = squeeze(nonlinearity_pVal_poold(1, :, :)) <= pVal;
sigAlpha = squeeze(linearity_pVal_poold(2, :, :)) <= pVal;
sigBeta = squeeze(linearity_pVal_poold(3, :, :)) <= pVal;
alpha = squeeze(linearity_Coeff_poold(2,:, :));
beta = squeeze(linearity_Coeff_poold(3,:, :));
gamma = squeeze(nonlinearity_Coeff_poold(1,:, :));
% %%
% sigAlpha = [];
% sigBeta = [];
% for oId = 1 : 2
%     alpha_null = squeeze(linearity_shuffled_Coeff_poold(2, :, oId, :));
%     beta_null = squeeze(linearity_shuffled_Coeff_poold(3, :, oId, :));
%     Alpha_single_odor_pval = [];
%     beta_single_odor_pval = [];
%     for ni = 1 : size(alpha, 1)
%         Alpha_single_odor_pval = [Alpha_single_odor_pval;...
%             sum(abs(alpha_null(ni,:))>abs(alpha(ni, oId)))/...
%             length(alpha_null(ni,:))];
%         beta_single_odor_pval = [beta_single_odor_pval;...
%             sum(abs(beta_null(ni,:))>abs(beta(ni, oId)))/...
%             length(beta_null(ni,:))];
%     end
%     sigAlpha = [sigAlpha,... 
%         Alpha_single_odor_pval];
%     sigBeta = [sigBeta,...
%         beta_single_odor_pval];
% end 
% sigBeta = sigBeta < pVal;
% sigAlpha = sigAlpha < pVal;
%%
saveDir = fullfile(final_figs_path('beast1'),...
    'fig5_coeff_for_simulation');
if ~exist(saveDir , 'dir')
   mkdir(saveDir)
end
%%
save(fullfile(saveDir, 'fig5_coeff_for_simulation.mat'),...
    'sigGamma', 'beta', 'gamma', 'alpha',...
    "sigBeta", "sigAlpha", "constantFactor", '-v7.3');