% this scripts is amied to assessing whether the diffrent responce to the
% stimulit during diffrent inh type is real or just because of random
% diffrence 071522 - regardless of mechano sensitivity
%%
clear; clc; close all;
[~, mouseNameList, dataPathPrefixList] =....
    get_all_conc_mice('paola');

pltDir = fullfile(final_figs_path('paola'),...
    'fig1_E_G_multcomp_corrected');
if ~exist(pltDir , 'dir')
   mkdir(pltDir)
end
cd(pltDir)


%% define container

[tBegining, tEnd, trialToRemove]=...
    get_removal_variables();
pVal_threshold = .01;
numberOfShuffle = 1000;
%% 

num_of_sorted_cell_conc =...
    [];
num_of_typeSelective_cell_conc =...
    [];

diffRespTestResults_pooled = [];
Rpref_TestResults_pooled = [];
Spref_TestResults_pooled = [];

Rtype_mean_FR_pooled = [];
Stype_mean_FR_pooled = [];

num_of_all_cells = [];
num_of_all_cell_odors = [];
sorted_cell_odors_pairs = [];
sorted_cells = [];
consSet = [1, 2];

deltaR_allCells = [];

%%
for mn = 1 : length(mouseNameList)
    %%
    mouseName = mouseNameList{mn};
    dataPathPrefix = dataPathPrefixList{mn};
    mouseDirName = fullfile(dataPathPrefix,'processedDataStorage',...
        mouseName);
    load(fullfile(mouseDirName,...
        sprintf('%s_respData.mat', mouseName)));
    load(fullfile(mouseDirName,...
        sprintf('%s_respLabelsData.mat', mouseName)));
    load(fullfile(mouseDirName,...
        sprintf('%s_inh_NR.mat', mouseName)));
    load(fullfile(mouseDirName,...
        sprintf('%s_recordingData.mat', mouseName)));
    load(fullfile(mouseDirName,...
        sprintf('%s_odorStatistics_wholeStimulus.mat',...
        mouseNameList{mn})))
    %%
    if isfield(respData,'rawXpeakPuffFree')
        xpeaksTrialId = respData.xpeakRealTrialId;
    else
        xpeaksTrialId = respData.xpeakTrialId;
    end
    %%
    goodAndSafe_unitsFlag =...
        get_goodAndSafe_units(dataPathPrefix, mouseName,...
        6, .5);
    num_of_all_cells = [num_of_all_cells;...
        sum(goodAndSafe_unitsFlag)];
    %%
    avg_fr = inh_NR.after_sc/inh_NR.cacheInfo.windSizeSec;
    
    %% get fast-slow delta
%     deltaR = get_inh_modulated_averageDeltaResp(inh_NR, respData, respLabelsData,recordingData);
    
    %% which of these are odor responsive    - fdr-corrected
    pvals = odorStatistics_wholeStimulus.graterTestPVal(:,:,consSet); %not limiting the number of odors included
    pvals = reshape(pvals, size(pvals,1), [], 1);
    pvals = pvals';
    clear c_pvals
    for i = 1:size(pvals,2)
        [c_pvals(:,i), ~, ~, ~] = fdr_BH(pvals(:,i), 0.05);
    end
    c_results = sum(c_pvals < 0.05) > 0;
    c_results = c_results(:);
    
    % revert c_pvals to original form
    c_pvals = c_pvals';
    c_pvals = reshape(c_pvals, size(c_pvals,1), [], length(consSet));
    
%     odor_responsive_flag = c_results(goodAndSafe_unitsFlag); use later to concatenate for ct indexing
    
    odorResponsiveUnits = goodAndSafe_unitsFlag & c_results;
    
    useCells =  odorResponsiveUnits;
%     deltaR_usecells = cat(2, find(useCells), mn*ones(sum(useCells),1), deltaR(useCells)');
%     deltaR_allCells = cat(1, deltaR_allCells, deltaR_usecells);
    %% responsive
    for oId = 1 : max(respData.xpeakOdorId)
        num_of_all_cell_odors = [num_of_all_cell_odors;...
        sum(goodAndSafe_unitsFlag)];
        for ci = consSet
            sorted_units = find(useCells & c_pvals(:, oId, ci)<0.05);  
%             fprintf('from %d to %d\n', length(Rtype_mean_FR_pooled)+1, length(Rtype_mean_FR_pooled)+length(sorted_units))
            sorted_cells = [sorted_cells;...
                [sorted_units, repmat(mn,[length(sorted_units), 1])]];
            sorted_cell_odors_pairs = [sorted_cell_odors_pairs;
                [sorted_units,  repmat(oId,[length(sorted_units), 1]),...
                repmat(mn,[length(sorted_units), 1]), ...
                repmat(ci,[length(sorted_units), 1])]];
            
            diffRespTestResults = nan(length(sorted_units), 1);
            Rpref_TestResults = nan(length(sorted_units), 1);
            Spref_TestResults = nan(length(sorted_units), 1);

            Rtype_mean_FR = nan(length(sorted_units), 1);
            Stype_mean_FR= nan(length(sorted_units), 1);

            for nIdx = 1 : length(sorted_units)
                R_response = avg_fr(...
                    respData.xpeakOdorId == oId &...
                    respData.xpeakConcId == ci &...
                    respLabelsData.respLabels == 2 &...
                    respData.xPeaksTimeLog > tBegining &...
                    respData.xPeaksTimeLog <= tEnd &...
                    xpeaksTrialId > trialToRemove,...
                    sorted_units(nIdx));
                S_response = avg_fr(...
                    respData.xpeakOdorId == oId &...
                    respData.xpeakConcId == ci &...
                    respLabelsData.respLabels == 1 &...
                    respData.xPeaksTimeLog > tBegining &...
                    respData.xPeaksTimeLog <= tEnd &...
                    xpeaksTrialId > trialToRemove,...
                    sorted_units(nIdx));

                Rtype_mean_FR(nIdx) = mean(R_response);
                Stype_mean_FR(nIdx) = mean(S_response);

                [pVal_diff] =...
                    ranksum(R_response, S_response,...
                    'tail', 'both');
                [pVal_Rpref] =...
                    ranksum(R_response, S_response,...
                    'tail', 'right');
                [pVal_Spref] =...
                    ranksum(R_response, S_response,...
                    'tail', 'left');
                diffRespTestResults(nIdx) =...
                    pVal_diff <= pVal_threshold;
                Rpref_TestResults(nIdx) =...
                    pVal_Rpref <= (pVal_threshold/2);
                Spref_TestResults(nIdx) =...
                    pVal_Spref <= (pVal_threshold/2);
            end
            num_of_sorted_cell_conc =...
                [num_of_sorted_cell_conc;...
                length(sorted_units)];      
            num_of_typeSelective_cell_conc =...
                [num_of_typeSelective_cell_conc;...
                sum(diffRespTestResults)];
            
            diffRespTestResults_pooled =...
                [diffRespTestResults_pooled;...
                diffRespTestResults];
            Rpref_TestResults_pooled =...
                [Rpref_TestResults_pooled;...
                Rpref_TestResults];
            Spref_TestResults_pooled =...
                [Spref_TestResults_pooled;...
                Spref_TestResults];

            Rtype_mean_FR_pooled =...
                [Rtype_mean_FR_pooled;...
                Rtype_mean_FR];
            Stype_mean_FR_pooled =...
                [Stype_mean_FR_pooled;...
                Stype_mean_FR];
            
        end
    end  
end
%%
respCells = sorted_cell_odors_pairs(diffRespTestResults_pooled==1,:);
unrespCells = sorted_cell_odors_pairs(diffRespTestResults_pooled==0,:);
allCellsUnique = unique(sorted_cell_odors_pairs(:,[1,3]), 'stable', 'rows');
respCellsUnique = unique(respCells(:,[1,3]), 'stable', 'rows');


FAST_avgFR_respCells = Stype_mean_FR_pooled(diffRespTestResults_pooled == 1);
SLOW_avgFR_respCells = Rtype_mean_FR_pooled(diffRespTestResults_pooled == 1);
FASTminusSLOW_deltaFR_respCells =  FAST_avgFR_respCells  - SLOW_avgFR_respCells;

respCells = cat(2, respCells, FAST_avgFR_respCells, SLOW_avgFR_respCells, FASTminusSLOW_deltaFR_respCells);

save('responsiveCellIDs.mat', 'respCells', 'unrespCells', 'respCellsUnique', 'deltaR_allCells');


%%
sorted_cell_odors_pairs = unique(sorted_cell_odors_pairs, 'rows');
sorted_cells = unique(sorted_cells, 'rows');

fileId = fopen(fullfile(pltDir,...
    'fig1_G_and_H_data_point_nums.txt'),...
    'w');
fprintf(fileId, 'num off all PCx cells of 6 mice: %d \n',...
    sum(num_of_all_cells));
fprintf(fileId, 'num off all PCx cell-odors of 6 mice: %d \n',...
    sum(num_of_all_cell_odors));
fprintf(fileId, 'num off plot data point (cell-conc. pairs): %d \n',...
    sum(num_of_sorted_cell_conc));
fprintf(fileId, 'num off cells that plot data point are come from: %d \n',...
    size(sorted_cells, 1));
fprintf(fileId, 'num off cell-odors that plot data point are come from: %d \n',...
    size(sorted_cell_odors_pairs, 1));
fclose(fileId);


%%
num_of_typeSelective_units_shuffled =...
    nan(length(num_of_sorted_cell_conc), numberOfShuffle);
idx = 1;
for mn = 1 : length(mouseNameList)
    %%
    mouseName = mouseNameList{mn};
    dataPathPrefix = dataPathPrefixList{mn};
    mouseDirName = fullfile(dataPathPrefix,'processedDataStorage',...
        mouseName);
     load(fullfile(mouseDirName,...
        sprintf('%s_respData.mat', mouseName)));
    load(fullfile(mouseDirName,...
        sprintf('%s_respLabelsData.mat', mouseName)));
    load(fullfile(mouseDirName,...
        sprintf('%s_inh_NR.mat', mouseName)));
    load(fullfile(mouseDirName,...
        sprintf('%s_recordingData.mat', mouseName)));
    load(fullfile(mouseDirName,...
        sprintf('%s_odorStatistics_wholeStimulus.mat', mouseNameList{mn})))
    %%
    if isfield(respData,'rawXpeakPuffFree')
        xpeaksTrialId = respData.xpeakRealTrialId;
    else
        xpeaksTrialId = respData.xpeakTrialId;
    end
    %%
    goodAndSafe_unitsFlag =...
        get_goodAndSafe_units(dataPathPrefix, mouseName,...
        6, .5);
    %%
    avg_fr = inh_NR.after_sc/inh_NR.cacheInfo.windSizeSec;
    %% responsive
    for oId = 1 : max(respData.xpeakOdorId)
        for ci = consSet
            sorted_units = find(goodAndSafe_unitsFlag &...
                odorStatistics_wholeStimulus.graterTestResult(:,...
                oId, ci));
            cellConcSigDiffRespNum =...
                nan(numberOfShuffle, 1);        
            parfor perm = 1 : numberOfShuffle
                respLabels = respLabelsData.respLabels;
                respLabelsShuffled =...
                    respLabels(randperm(length(respLabels)));
                diffRespTestResults =...
                    nan(length(sorted_units), 1);
                for nIdx = 1 : length(sorted_units)
                    R_response = avg_fr(...
                        respData.xpeakOdorId == oId &...
                        respData.xpeakConcId == ci &...
                        respLabelsShuffled == 2 &...
                        respData.xPeaksTimeLog >= tBegining &...
                        respData.xPeaksTimeLog <= tEnd &...
                        xpeaksTrialId > trialToRemove,...
                        sorted_units(nIdx));
                    S_response = avg_fr(...
                        respData.xpeakOdorId == oId &...
                        respData.xpeakConcId == ci &...
                        respLabelsShuffled == 1 &...
                        respData.xPeaksTimeLog >= tBegining &...
                        respData.xPeaksTimeLog <= tEnd &...
                        xpeaksTrialId > trialToRemove,...
                        sorted_units(nIdx));
                    [pVal_diff] =...
                        ranksum(R_response, S_response,...
                        'tail', 'both');
                    diffRespTestResults(nIdx) =...
                        pVal_diff <= pVal_threshold;
                end  
                cellConcSigDiffRespNum(perm) =...
                    sum(diffRespTestResults);
            end
            num_of_typeSelective_units_shuffled(idx, :) =...
                cellConcSigDiffRespNum;
            idx = idx+1;
        end
    end
end
%%
cellOdorFractionWithSigDiffrentResponce =...
    (sum(num_of_typeSelective_cell_conc)/...
    sum(num_of_sorted_cell_conc))*100;

nullDistOffraction = (sum(num_of_typeSelective_units_shuffled)/...
    sum(num_of_sorted_cell_conc))*100;

%%
[colorSet, SandR_colors] = set_plot_seting(15, 4);
close all; figure;
hold on
epsilon = .001;
% histogram(nullDistOffraction, 0:.7:60,...
%     'Normalization', 'probability', 'EdgeAlpha', 0,...
%     'FaceColor', colorSet(2,:))
[f,xi] = ksdensity(nullDistOffraction+epsilon,...
    'BoundaryCorrection','reflection', 'Support','positive',...
    'Bandwidth',.8); %Bandwidth is sensetive assess it with hist plot
xlabel('cell-odors fraction')
area(xi, f, 'FaceColor', colorSet(2,:), 'EdgeColor', .3*[1, 1, 1],...
    'FaceAlpha', .5, 'LineWidth', 1.5)
plot([cellOdorFractionWithSigDiffrentResponce,...
    cellOdorFractionWithSigDiffrentResponce], ylim,...
    'Color', colorSet(1,:))
text(cellOdorFractionWithSigDiffrentResponce-17, .3,...
    'real fraction \rightarrow ', 'FontSize', 11)
title('6 mice with two conc')
ylabel('PDF')
xlim([-1,60])
set(gcf,'Position',[300 300 500 270]);

print_it(pltDir, 'fig1_G_6_mice_with_two_conc','pooled')
% fprintf(fileId, '2conc exp: null mean: %.3f, std: %.3f; fraction: %.3f. \n',...
%     mean(nullDistOffraction), std(nullDistOffraction),...
%     cellOdorFractionWithSigDiffrentResponce);
%%
markerSize = 100;
transparancyAlfa = .5;
transparancyAlfaEdge = 0;
axisLim = [-2, 90];
dotFaceColor = .4*[1,1,1];
dotEdgeColor = .1*[1,1,1];
pltTiks = 0:30:60;

% close all; 
figure;
hold on;

mdl = fitlm(Rtype_mean_FR_pooled,...
        Stype_mean_FR_pooled);

scatter(Rtype_mean_FR_pooled(diffRespTestResults_pooled == 1),...
    Stype_mean_FR_pooled(diffRespTestResults_pooled == 1),markerSize,...
    'MarkerEdgeColor',dotEdgeColor, 'MarkerFaceColor',dotFaceColor,...
   'MarkerFaceAlpha',transparancyAlfa,'MarkerEdgeAlpha',1)


scatter(Rtype_mean_FR_pooled(diffRespTestResults_pooled == 0),...
    Stype_mean_FR_pooled(diffRespTestResults_pooled == 0), markerSize,...
    'MarkerEdgeColor',dotEdgeColor, 'MarkerFaceColor',[1,1,1],...
   'MarkerFaceAlpha',.8,'MarkerEdgeAlpha',1)

p  = patchline([.5,100],[.5,100],'linestyle','--','edgecolor','k',...
    'linewidth',2,'edgealpha', 1);

ylabel('firing rate (sp./s), S-type')
xlabel('firing rate (sp./s), R-type')
title({'6 mice with two conc',''})
xlim(axisLim); ylim(axisLim);
xticks(pltTiks); yticks(pltTiks)
axis square
set(gcf,'Position',[350 350 400 430]);
print_it(pltDir, 'fig1_F_6_mice_with_two_conc','pooled')
%%
fileId = fopen(fullfile(pltDir,...
    'fig1_G_and_H_num_and_stat.txt'),...
    'w');
fprintf(fileId, '%.2f %% cell-odor pair respons largerer during fast than slow inhalation. \n',...
    (sum(Spref_TestResults_pooled)/length(Spref_TestResults_pooled))*100);
fprintf(fileId, '%.2f %% cell-odor pair respons largerer during slow than fast inhalation. \n',...
    (sum(Rpref_TestResults_pooled)/length(Rpref_TestResults_pooled))*100);
fprintf(fileId, 'slow vs. fast R2= %.5f. \n',...
    mdl.Rsquared.Ordinary);
fclose(fileId)
